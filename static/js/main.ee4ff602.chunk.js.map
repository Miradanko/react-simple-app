{"version":3,"sources":["components/Loading/Loading.js","store/constants/constants.js","store/actions/actions.js","components/Pagination/Pagination.js","components/Filter/Filter.js","components/Button/Button.js","components/Favorites/Favorites.js","components/Product/Product.js","components/Product/index.js","components/Product/Product.container.js","containers/Products/Products.js","components/Dialog/Dialog.js","containers/Header/Header.js","components/CartCard/CartCard.js","forms/FormikForm/FormSchema.js","forms/FormikForm/FormikForm.js","containers/Cart/Cart.js","components/FavoriteCard/FavoriteCard.js","containers/Favorites/Favorites.js","App.js","serviceWorker.js","store/reducers/products/productsReducer.js","store/reducers/cart/cartReducer.js","store/reducers/favorites/favoritesReducer.js","store/reducers/loading/loadingReducer.js","store/reducers/currentProduct/currentProductReducer.js","store/reducers/openModal/openingModalReducer.js","store/reducers/deleteCart/deleteCartReducer.js","store/reducers/purchase/setPurchasePeducer.js","store/reducers/index.js","store/store.js","index.js"],"names":["Loading","className","Actions","FETCH_PRODUCTS","SET_CART","SET_FAVORITES","SET_LOADING","SET_CURRENT_PRODUCT","SET_OPEN_MODAL","DELETE_CART_CARD","SET_PURCHASE_DATA","SET_AMOUNT","DECREASE_AMOUNT","INCREASE_AMOUNT","CLEAR_CART","GET_TOTAL","FILTER_PRODUCTS_BY_COLOR","ORDER_PRODUCTS_BY_PRICE","setCurrentProduct","currentProduct","dispatch","type","payload","setOpenModal","isOpen","setCart","cartCard","clearCart","getTotal","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","map","number","key","onClick","e","preventDefault","exact","to","connect","store","products","filteredProducts","color","sort","filterProducts","filter","item","indexOf","toUpperCase","sortProducts","price","sortedProducts","slice","a","b","article","props","filterCallback","length","value","onChange","target","Button","text","isInCart","defaultProps","Favorites","isFav","Product","openingModal","saveCurProd","product","header","onSaveToFav","src","image","alt","name","style","backgroundColor","colorId","console","log","window","pageYOffset","openModal","opModal","Products","favorites","cart","useState","currentPage","setCurrentPage","useEffect","indexOfLastPost","indexOfFirstPost","currentPosts","favoritesArticle","fav","cartArticle","cartItem","productCards","includes","pageNumber","activeClass","smooth","offset","duration","cartArray","Dialog","onClose","onSubmit","arrayActionsButtons","dialog","defaulsProps","amount","totalAmount","id","isToDelete","setOpenModalDeleteCart","card","prod","saveToCart","increaseAmount","decreaseAmount","count","cartProduct","newCart","indexCart","splice","localStorage","setItem","JSON","stringify","onDelete","disabled","no_spacing_regex","only_letters_regex","FormSchema","yup","shape","firstName","min","matches","required","lastName","age","positive","integer","address","max","tel","purchase","setNewOrder","data","setPurchaseData","withRouter","initialValues","validationSchema","values","setSubmitting","resetForm","purchaseArray","userData","setTimeout","clear","history","formikProps","component","placeholder","isSubmitting","total","totalPrice","cartProducts","removeItem","FavoriteCard","favProduct","favoriteProducts","loading","getProducts","axios","then","result","saveFavs","favs","setOpeningModal","newProduct","newFavorites","indexFav","path","render","Cart","Boolean","location","hostname","match","initState","state","action","parse","getItem","cartt","reduce","cartTotal","itemTotal","parseFloat","toFixed","saveCurrentProduct","rootReducer","combineReducers","form","formReducer","devTools","__REDUX_DEVTOOLS_EXTENSION__","f","createStore","compose","applyMiddleware","thunk","productsBlock","document","getElementsByClassName","documentElement","clientHeight","scrollHeight","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ee4ff602.chunk.js","sourcesContent":["import React from 'react';\nimport './Loading.scss';\n\nconst Loading = () => {\n    return (\n        <div className=\"lds-default\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    )\n};\n\nexport default Loading;","const Actions = {\n    FETCH_PRODUCTS: 'FETCH_PRODUCTS',\n    SET_CART: 'SET_CART',\n    SET_FAVORITES: 'SET_FAVORITES',\n    SET_LOADING: 'SET_LOADING',\n    SET_CURRENT_PRODUCT: 'SET_CURRENT_PRODUCT',\n    SET_OPEN_MODAL: 'SET_OPEN_MODAL',\n    DELETE_CART_CARD: 'DELETE_CART_CARD',\n    SET_PURCHASE_DATA: 'SET_PURCHASE_DATA',\n    SET_AMOUNT: 'SET_AMOUNT',\n    DECREASE_AMOUNT: 'DECREASE_AMOUNT',\n    INCREASE_AMOUNT: 'INCREASE_AMOUNT',\n    CLEAR_CART: 'CLEAR_CART',\n    GET_TOTAL: 'GET_TOTAL',\n    FILTER_PRODUCTS_BY_COLOR: 'FILTER_PRODUCTS_BY_COLOR',\n    ORDER_PRODUCTS_BY_PRICE: 'ORDER_PRODUCTS_BY_PRICE'\n}\n\nexport default Actions;","import Actions from '../constants/constants';\nimport axios from 'axios';\n\nexport const getProducts = () => (dispatch) => {\n    axios('/products.json')\n        .then(result => {\n            setTimeout(() => {\n                dispatch({ type: Actions.FETCH_PRODUCTS, payload: result.data });\n                dispatch({ type: Actions.SET_LOADING, payload: false });\n            }, 2000);\n        });\n};\n\nexport const filterProducts = (products, color) => (dispatch) => {\n    dispatch ({ type: Actions.FILTER_PRODUCTS_BY_COLOR, payload: {\n        color: color,\n        products: color === '' ? products : products.filter(item => item.color.indexOf(color.toUpperCase()) >=0 )\n    }})\n};\n\nexport const sortProducts = (products, sort, price) => (dispatch) => {\n    const sortedProducts = products.slice();\n    if (sort !== '') {\n        sortedProducts.sort((a, b) => \n            sort === \"lowestprice\" ? a.price > b.price ? 1 : -1 : a.price < b.price ? 1 : -1\n        )\n    } else {\n        sortedProducts.sort((a, b) => ( a.article > b.article ? 1 : -1));\n    }\n    dispatch ({ type: Actions.ORDER_PRODUCTS_BY_PRICE, payload: {\n        price: price,\n        products : sortedProducts\n    }})\n}\n\nexport const setPurchaseData = (data) => (dispatch) => {\n    dispatch ({ type: Actions.SET_PURCHASE_DATA, payload: data})\n}\n\nexport const setCurrentProduct = (currentProduct) => (dispatch) => {\n    dispatch ({ type: Actions.SET_CURRENT_PRODUCT, payload: currentProduct})\n}\n\nexport const setOpenModal = (isOpen) => (dispatch) => {\n    dispatch ({ type: Actions.SET_OPEN_MODAL, payload: isOpen})\n};\n\nexport const setFavorites = (favs) => (dispatch) => {\n    dispatch ({ type: Actions.SET_FAVORITES, payload: favs})\n};\n\nexport const setCart = (cartCard) => (dispatch) => {\n    dispatch ({ type: Actions.SET_CART, payload: cartCard })\n};\n\nexport const deleteCartCart = (prod) => (dispatch) => {\n    dispatch ({ type: Actions.DELETE_CART_CARD, payload: prod })\n}\n\nexport const decreaseAmount = (article) => (dispatch) => {\n    dispatch ({ type: Actions.DECREASE_AMOUNT, payload: article })\n}\nexport const increaseAmount = (article) => (dispatch) => {\n    console.log(article)\n    dispatch ({ type: Actions.INCREASE_AMOUNT, payload: article })\n}\nexport const clearCart = () => (dispatch) => {\n    dispatch ({ type: Actions.CLEAR_CART })\n}\nexport const getTotal = () => (dispatch) => {\n    dispatch ({ type: Actions.GET_TOTAL })\n}","import React from 'react';\nimport \"./Pagination.scss\";\nimport { NavLink } from 'react-router-dom';\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n        pageNumbers.push(i);\n    }\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pageNumbers.map(number => (\n                    <li key={number} className=\"page-item\">\n                        <NavLink onClick={(e) => {\n                            e.preventDefault();\n                            paginate(number)}} exact to=\"/\" className=\"page-link\">\n                            {number}\n                        </NavLink>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    )\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { filterProducts, sortProducts } from '../../store/actions/actions';\nimport './Filter.scss';\n\nconst Filter = (props) => {\n    const { products, filterProducts, filteredProducts, color, sort, sortProducts, filterCallback } = props;\n\n    return (\n        <div className=\"filter\">\n            <div>{`${filteredProducts.length} products found`}</div>\n            <div>\n                <label>\n                    {\" \"}\n                    Filter  color&nbsp;\t\n                    <select value={color} onChange={e => {\n                        filterProducts(products, e.target.value);\n                        filterCallback();\n                    }} className=\"filter__select\">\n                        <option className=\"option\" value=\"\">Select color</option>\n                        <option value=\"DARK BEIGE\">DARK BEIGE</option>\n                        <option value=\"ORANGE\">ORANGE</option>\n                        <option value=\"GREY\">GREY</option>\n                        <option value=\"SAND\">SAND</option>\n                        <option value=\"BLACK\">BLACK</option>\n                        <option value=\"MUSTARD YELLOW\">MUSTARD YELLOW</option>\n                        <option value=\"GREEN\">GREEN</option>\n                        <option value=\"LIGHT BLUE\">LIGHT BLUE</option>\n                        <option value=\"MOLE\">MOLE</option>\n                    </select>\n                </label>\n            </div>\n            <div>\n                <label>\n                    {\" \"}\n                    Sort by&nbsp;\t\n                    <select value={sort} onChange={e => {\n                        sortProducts(filteredProducts, e.target.value)\n                    }} className=\"filter__select\">\n                        <option className=\"option\" value=\"\">Select</option>\n                        <option value=\"lowestprice\">Lowest to highest</option>\n                        <option value=\"highestprice\">Highest to lowest</option>\n                    </select>\n                </label>\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = (store) => {\n    return {\n        products: store.products.products,\n        filteredProducts: store.products.filteredProducts,\n        color: store.products.color,\n        sort: store.products.sort\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        filterProducts: (products, color) => dispatch(filterProducts(products, color)),\n        sortProducts: (products, sort) => dispatch(sortProducts(products, sort))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\nimport propTypes from 'prop-types';\nimport './Button.scss';\n\nconst Button = (props) => {\n    const { text, onClick, isInCart } = props;\n    const isAdded = 'btn-delete'\n    const notAdded = 'btn';\n    return (\n        <div>\n            <button className={isInCart ? isAdded : notAdded} onClick={onClick}>{text}</button>\n        </div>\n    )\n}\n\nButton.propTypes = {\n    text: propTypes.string,\n    onClick: propTypes.func.isRequired,\n    isInCart: propTypes.bool\n};\n\nButton.defaultProps = {\n    text: 'Add to cart',\n    isInCart: false\n}\n\nexport default Button;","import React from 'react';\nimport propTypes from 'prop-types';\nimport './Favorites.scss';\n\nconst Favorites = (props) => {\n    const { onClick, isFav } = props;\n    const emptyClasses = 'fav fav-star';\n    const filledClasses = 'fav fav-star filled';\n    return (\n        <div className={isFav ? filledClasses : emptyClasses} onClick={onClick}></div>\n    )\n};\n\nFavorites.propTypes = {\n    onClick: propTypes.func,\n    isFav: propTypes.bool\n}\n\n\nexport default Favorites;","import React from 'react';\nimport propTypes from 'prop-types';\nimport Button from '../Button/Button';\nimport Favorites from '../Favorites/Favorites';\n\nimport './Product.scss';\n\nconst Product = (props) => {\n    const { openingModal, saveCurProd, product, header, isFav, isInCart, onSaveToFav } = props;\n\n    if(!product) {\n        return null\n    }\n\n    const openModal = (product) => {\n        console.log(window.pageYOffset);\n        openingModal(true);\n        saveCurProd(product)\n    };\n\n    return (\n        <div className='products'>\n            <div className='products-img'>\n                <img src={product.image} className='products-img-item' alt={product.article}></img>\n            </div>\n            <div className='products-description'>\n                <div className='products-description-name'>{product.name}</div>\n                <div className='products-description-price'>${product.price}</div>\n                <div className='products-description-color'>\n                    <div className='products-description-color-container'>\n                        <div className='products-description-color-container-square' style={{ backgroundColor: product.colorId }}></div>\n                        {product.color}\n                    </div>\n                    <div className='action-block'>\n                        <Favorites isFav={isFav} onClick={() => onSaveToFav(product)} />\n                        <Button isInCart={isInCart} text={header} onClick={() => openModal(product)} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\n\nProduct.propTypes = {\n    onSaveToFav: propTypes.func,\n    product: propTypes.object,\n    openingModal: propTypes.func,\n    isFav: propTypes.bool,\n    isInCart: propTypes.bool,\n    saveCurProd: propTypes.func\n}\n\nexport default Product;","import Product from './Product.container';\n\nexport default Product;","import { connect } from \"react-redux\";\nimport Product from './Product';\nimport { setOpenModal, setCurrentProduct } from '../../store/actions/actions';\n\nconst mapStateToProps = store => {\n    return {\n        opModal: store.openingModal\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        openingModal: (isOpen) => dispatch(setOpenModal(isOpen)),\n        saveCurProd: (product) => dispatch(setCurrentProduct(product)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);","import React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getTotal } from '../../store/actions/actions';\nimport Pagination from '../../components/Pagination/Pagination';\nimport Filter from '../../components/Filter/Filter';\nimport { Link } from 'react-scroll';\n\nimport Product from '../../components/Product';\nimport './Products.scss';\n\nconst Products = (props) => {\n\n    const { products, favorites, onSaveToFav, cart, getTotal } = props;\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [postsPerPage] = useState(9);\n\n    useEffect(() => {\n        getTotal()\n    }, [getTotal]);\n\n    //Get current posts\n\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = products.slice(indexOfFirstPost, indexOfLastPost);\n\n    // Change page\n    const paginate = pageNumber => setCurrentPage(pageNumber);\n    const resetCurrentPage = () => setCurrentPage(1);\n\n    const favoritesArticle = favorites.map(fav => fav.article);\n    const cartArticle = cart.map(cartItem => cartItem.article);\n    const productCards = currentPosts.map(product => {\n        const isFav = favoritesArticle.includes(product.article);\n        const isInCart = cartArticle.includes(product.article)\n        return <Product isFav={isFav} isInCart={isInCart} key={product.article} product={product} onSaveToFav={onSaveToFav} />\n    });\n\n    return (\n        <div className=\"container\">\n            <Filter filterCallback={resetCurrentPage} />\n            <Pagination postsPerPage={postsPerPage} totalPosts={products.length} paginate={paginate} />\n            <div className='products'>\n                {productCards}\n            </div>\n            <Link activeClass=\"active\" to=\"header\" smooth={true} offset={-10} duration={500}>\n                <div className=\"arrow-7\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </div>\n            </Link>\n        </div>\n    )\n};\n\nProducts.propTypes = {\n    products: propTypes.array.isRequired,\n    onSaveToFav: propTypes.func,\n    favorites: propTypes.array,\n    cart: propTypes.array\n}\n\nProducts.defaultProps = {\n    products: []\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        products: store.products.filteredProducts,\n        cart: store.cart.cartArray,\n        favorites: store.favorites,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getTotal: () => dispatch(getTotal())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);","import React from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './Dialog.scss';\n\nconst Dialog = (props) => {\n    const { header, onClose, onSubmit, currentProduct } = props;\n    const arrayActionsButtons = [\n        (<button onClick={onSubmit} key='OK'>OK</button>),\n        (<button onClick={onClose} key='Cancel'>Cancel</button>)\n    ];\n    let dialog = (\n        <>\n            <div onClick={onClose} className='backdrop'></div>\n            <div className='dialog'>\n                <button className='dialog-button' onClick={onClose}>x</button>\n                <p>{header}</p>\n                <div className='prod-row'>\n                    <img src={currentProduct.image} className='prod-item' alt={currentProduct.article}></img>\n                    <div>\n                        <div className='products-description-name'>{currentProduct.name}</div>\n                        <div className='products-description-price'>{currentProduct.price}</div>\n                        <div className='products-description-color'>\n                            <div className='products-description-color-container'>\n                                <div className='products-description-color-container-square' style={{ backgroundColor: currentProduct.colorId }}></div>\n                                {currentProduct.color}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='dialog-button-action'>{arrayActionsButtons}</div>\n            </div>\n        </>\n    );\n\n    return (\n        <div>\n            {dialog}\n        </div>\n    )\n};\n\nDialog.propTypes = {\n    header: propTypes.string,\n    onClose: propTypes.func,\n    onSubmit: propTypes.func,\n    currentProduct: propTypes.object\n};\n\nDialog.defaulsProps = {\n    header: 'Добавить товар в корзину?'\n}\n\nconst mapStateToProps = store => {\n    return {\n        currentProduct: store.currentProduct\n    }\n}\n\n\nexport default connect(mapStateToProps)(Dialog);","import React, { useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getTotal } from '../../store/actions/actions';\nimport './Header.scss';\n\nconst Header = (props) => {\n    const { amount } = props;\n    useEffect(() => {\n        getTotal()\n    })\n\n    return (\n        <div className='header' id='header'>\n            <div>\n                <NavLink exact to='/'>\n                    <img src=\"https://img.icons8.com/ios/35/000000/home.png\" alt='main-icon' />\n                </NavLink>\n            </div>\n            <div>\n                <NavLink exact to='/favorites'>\n                    <img src=\"https://img.icons8.com/dotty/40/000000/window-favorite.png\" alt='favorites-icon' />\n                </NavLink>\n            </div>\n            <div>\n                <NavLink exact to='/cart'>\n                    <img src=\"https://img.icons8.com/dotty/40/000000/favorite-cart.png\" alt='cart-icon' />\n                    <div className='round'>{amount}</div>\n                </NavLink>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (store) => {\n    return {\n        amount: store.cart.totalAmount\n    }\n}\n\nexport default connect(mapStateToProps, null)(Header);","import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\n\nimport Dialog from '../Dialog/Dialog';\nimport { deleteCartCart, setCart, setCurrentProduct, decreaseAmount, increaseAmount, getTotal } from '../../store/actions/actions';\nimport './CartCard.scss';\n\nconst CartCard = (props) => {\n    const { isToDelete, setOpenModalDeleteCart, saveToCart, saveCurProd,\n        currentProduct, cartProduct, cart,\n        increaseAmount, decreaseAmount, getTotal } = props;\n\n    const openModalDelete = (product) => {\n        setOpenModalDeleteCart(true);\n        saveCurProd(product);\n    };\n    const onClose = () => {\n        setOpenModalDeleteCart(false);\n    };\n    const onDelete = (product) => {\n        let newCart = [...cart];\n        const indexCart = newCart.indexOf(product);\n\n        if (indexCart !== -1) {\n            newCart.splice(indexCart, 1)\n        }\n        localStorage.setItem('cart', JSON.stringify(newCart));\n\n        saveCurProd(product);\n        setOpenModalDeleteCart(false);\n        saveToCart(newCart);\n        getTotal()\n    };\n    const handleIncrease = (product) => {\n        increaseAmount(product);\n        getTotal()\n    };\n    const handleDecrease = (product) => {\n        decreaseAmount(product);\n        getTotal()\n    }\n    const dialogDetele = (\n        <Dialog\n            header='Do you really want to delete product from cart?'\n            onClose={onClose}\n            onSubmit={() => onDelete(currentProduct)}\n            currentProduct={currentProduct}\n        >\n        </Dialog>\n    );\n\n    if (isToDelete) {\n        return dialogDetele\n    }\n    return (\n        <div className='cart-card'>\n            <div className='cart-action'>\n                <div className='cart-action-delete' onClick={() => openModalDelete(cartProduct)}>\n                    <img src=\"https://img.icons8.com/small/16/000000/delete-sign.png\" alt={cartProduct.article} />\n                </div>\n            </div>\n            <div className='products'>\n                <div className='products-img'>\n                    <img src={cartProduct.image} className='products-img-item' alt={cartProduct.article}></img>\n                </div>\n                <div className='products-description'>\n                    <div className='products-description-name'>{cartProduct.name}</div>\n                    <div className='products-description-price'>${cartProduct.price}</div>\n                    <div className='cart-card-footer'>\n                        <div className='products-description-color'>\n                            <div className='products-description-color-container'>\n                                <div className='products-description-color-container-square' style={{ backgroundColor: cartProduct.colorId }}></div>\n                                {cartProduct.color}\n                            </div>\n                        </div>\n                        <div className='amount'>\n                            <button className='back-next' disabled={cartProduct.amount === 1} onClick={() => handleDecrease(cartProduct.article)}>\n                                <img alt='back' src=\"https://img.icons8.com/ios/17/000000/previous.png\"/>\n                            </button>\n                            <p className='amount'>{cartProduct.amount}</p>\n                            <button className='back-next next' onClick={() => handleIncrease(cartProduct.article)}>\n                                <img alt='next' src=\"https://img.icons8.com/ios/17/000000/next.png\"/>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nCartCard.propTypes = {\n    onSaveToFav: propTypes.func,\n    isFav: propTypes.bool,\n    cartProduct: propTypes.object,\n    isToDelete: propTypes.bool,\n    setOpenModalDeleteCart: propTypes.func,\n    saveToCart: propTypes.func,\n    saveCurProd: propTypes.func,\n    currentProduct: propTypes.object,\n    cart: propTypes.array\n}\n\nconst mapStateToProps = store => {\n    return {\n        isToDelete: store.isToDelete,\n        cart: store.cart.cartArray,\n        currentProduct: store.currentProduct\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setOpenModalDeleteCart: (card) => dispatch(deleteCartCart(card)),\n        saveToCart: (cartItem) => dispatch(setCart(cartItem)),\n        saveCurProd: (product) => dispatch(setCurrentProduct(product)),\n        increaseAmount: (item) => dispatch(increaseAmount(item)),\n        decreaseAmount: (count) => dispatch(decreaseAmount(count)),\n        getTotal: () => dispatch(getTotal())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartCard);","import * as yup from 'yup';\n\n// const age_regex = /[0-9]/g;\nconst phone_regex = /^\\+?3?8?(0\\d{9})$/;\nconst address_regex = /^[a-zA-Z0-9\\s,.'-]{3,}$/;\nconst no_spacing_regex = /^[a-zA-Z0-9]*$/;\nconst only_letters_regex = /^[a-zA-Z]+$/;\n// const address_regex = /\\b(\\d{2,5}\\s+)(?![a|p]m\\b)(NW|NE|SW|SE|north|south|west|east|n|e|s|w)?([\\s|\\,|.]+)?(([a-zA-Z|\\s+]{1,30}){1,4})(court|ct|street|st|drive|dr|lane|ln|road|rd|blvd)/i;\n\nexport const FormSchema = yup.object().shape({\n    firstName: yup.string()\n        .min(2, 'Min name length is 2 symbols')\n        .matches(only_letters_regex, 'Name can contain only letters')\n        .matches(no_spacing_regex, 'Enter your name without spacing')\n        .required('This field is required'),\n    lastName: yup.string()\n        .min(2, 'Min name length is 2 symbols')\n        .matches(only_letters_regex, 'Last name can contain only letters')\n        .matches(no_spacing_regex, 'Enter your last name without spacing')\n        .required('This field is required'),\n    age: yup\n        .number('Please, enter numbers only')\n        .positive()\n        // .matches(age_regex, 'Enter your age from 17 till 200')\n        .required()\n        .integer(),\n    address: yup.string()\n        .matches(address_regex, 'Please, enter a valid address')\n        .max(150, 'It is too long address')\n        .required('This field is required'),\n    tel: yup.string()\n        .matches(phone_regex, 'Your phone number should look like +380938107132')\n        .min(13)\n        .max(13)\n})\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, Formik, ErrorMessage, Form } from 'formik';\n// import { setSubmitting, resetForm } from 'formik';\nimport { FormSchema } from './FormSchema';\nimport { setPurchaseData, clearCart, getTotal } from '../../store/actions/actions';\nimport {withRouter} from 'react-router-dom'\nimport './FormikForma.scss';\n\n\nconst FormikForm = (props) => {\n    const { setNewOrder, cart, clearCart, getTotal} = props; \n\n    const handleSubmit = (values, { setSubmitting, resetForm }) => {\n        setSubmitting(true);\n        const purchaseArray = {\n            userData: [values],\n            products: [cart]\n        };\n\n        setTimeout(() => {\n            setNewOrder(purchaseArray);\n            resetForm();\n            setSubmitting(false);\n            localStorage.clear();\n            clearCart();\n            getTotal();\n            props.history.push('/')\n        }, 1000);\n        console.log(\"FORM DATA\", purchaseArray)\n    }\n\n    return (\n        <div className='form'>\n            <Formik initialValues={{ firstName: '', lastName: '', age: '', address: '', tel: '' }}\n                validationSchema={FormSchema}\n                // validate={(values) => {\n                //     // return {login: 'Login Error'}\n                //     const errors = {};\n\n                //     if (values.password !== values.confirmPassword) {\n                //         errors.confirmPassword = 'Password do not match'\n                //     }\n\n                //     return errors\n                // }}\n                onSubmit={handleSubmit}\n            >\n                {(formikProps) => {\n                    // console.log('Formik props', formikProps)\n                    return (\n                        <Form>\n                            <Field className='form-input' component='input' type='text' name='firstName' placeholder='First Name' />\n                            <span className='error'><ErrorMessage name='firstName' /></span>\n                            <Field className='form-input' component='input' type='text' name='lastName' placeholder='Last Name' />\n                            <span className='error'><ErrorMessage name='lastName' /></span>\n                            <Field className='form-input' component='input' type='data' name='age' placeholder='Age' />\n                            <span className='error'><ErrorMessage name='age' /></span>\n                            <Field className='form-input' component='input' type='text' name='address' placeholder='Address' />\n                            <span className='error'><ErrorMessage name='address' /></span>\n                            <Field className='form-input' component='input' type='tel' name='tel' placeholder='(093)-810-7132' />\n                            <span className='error'><ErrorMessage name='tel' /></span>\n                            {/* <div>\n                                <button type='button' onClick={handleReset}>Reset</button>\n                            </div> */}\n                            <div>\n                                <button className='form-submit' type='submit' disabled={formikProps.isSubmitting}>Submit form</button>\n                            </div>\n                        </Form>\n                    )\n                }}\n            </Formik>\n        </div>\n    )\n};\n\nconst mapStateToProps = (store) => {\n    return {\n        purchase: store.purchase,\n        cart: store.cart.cartArray\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setNewOrder: (data) => dispatch(setPurchaseData(data)),\n        clearCart: () => dispatch(clearCart()),\n        getTotal: () => dispatch(getTotal())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(FormikForm));","import React, { useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CartCard from '../../components/CartCard/CartCard';\nimport FormikForm from '../../forms/FormikForm/FormikForm';\nimport { clearCart, getTotal } from '../../store/actions/actions';\nimport Button from '../../components/Button/Button';\nimport './Cart.scss';\n\nconst Cart = (props) => {\n    const { cart, clearCart, total, getTotal } = props;\n    useEffect(() => {\n        getTotal()\n    }, [getTotal])       \n \n    const cartProducts = cart.map(cartProduct => {\n        return <CartCard key={cartProduct.article} cartProduct={cartProduct} />\n    });\n\n    const handleClearCart = () => {\n        clearCart();\n        localStorage.removeItem('cart');\n        getTotal();\n        props.history.push('/')\n    }\n    if(cart===[]) {\n        console.log(123)\n        props.history.push('/')\n    }\n\n\n    return (\n        <div className='products-cart'>\n            {cartProducts.length ? <FormikForm className='submit-form' /> : null}\n            <div className='products'>\n                {cart.length ? cartProducts : <div className='no-prod'>No products in Cart</div>}\n            </div>\n            <footer className='cart-footer'>\n                <div className='total-button'>\n                    <div>\n                        <h4 className='total'>\n                            total <span>${total}.00</span>\n                        </h4>\n                    </div>\n                    {cart.length ? <Button className='clearCart' text='Clear Cart' onClick={handleClearCart} /> : null}\n                </div>\n            </footer>\n        </div>\n    )\n};\n\nCart.propTypes = {\n    cart: propTypes.array,\n    onSaveToFav: propTypes.func\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        cart: store.cart.cartArray,\n        total: store.cart.totalPrice\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        clearCart: () => dispatch(clearCart()),\n        getTotal: () => dispatch(getTotal())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React from 'react';\nimport Favorites from '../../components/Favorites/Favorites';\nimport propTypes from 'prop-types';\nimport './FavoriteCard.scss';\n\nconst FavoriteCard = (props) => {\n    const { isFav, onSaveToFav, favProduct } = props;\n    return (\n        <div className='favorite-card'>\n            <div className='favorite-action'>\n                <Favorites className='cart-action-fav' isFav={isFav} onClick={() => onSaveToFav(favProduct)} />\n            </div>\n            <div className='products'>\n                <div className='products-img'>\n                    <img src={favProduct.image} className='products-img-item' alt={favProduct.article}></img>\n                </div>\n                <div className='products-description'>\n                    <div className='products-description-name'>{favProduct.name}</div>\n                    <div className='products-description-price'>${favProduct.price}</div>\n                    <div className='products-description-color'>\n                        <div className='products-description-color-container'>\n                            <div className='products-description-color-container-square' style={{ backgroundColor: favProduct.colorId }}></div>\n                            {favProduct.color}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nFavoriteCard.propTypes = {\n    isFav: propTypes.bool,\n    onSaveToFav: propTypes.func,\n    favProduct: propTypes.object\n}\n\nexport default FavoriteCard;","import React from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport FavoriteCard from '../../components/FavoriteCard/FavoriteCard';\nimport './Favorites.scss';\n\nconst Favorites = (props) => {\n    const { onSaveToFav, favorites } = props;\n    const favoritesArticle = favorites.map(fav => fav.article);\n    const favoriteProducts = favorites.map(favProduct => {\n        const isFav = favoritesArticle.includes(favProduct.article);\n        return <FavoriteCard key={favProduct.article} isFav={isFav} favProduct={favProduct} onSaveToFav={onSaveToFav} />\n    })\n    return (\n        <div className='products'>\n            {favorites.length ? favoriteProducts : <div className='no-prod'>No Products in favorites</div>}\n        </div>\n    )\n};\n\nFavorites.propTypes = {\n    onSaveToFav: propTypes.func,\n    favorites: propTypes.array,\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        favorites: store.favorites\n    }\n}\nFavorites.defaultProps = {\n    favorites: []\n}\n\nexport default connect(mapStateToProps, null)(Favorites);","import React, { useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Loading from './components/Loading/Loading';\nimport Products from './containers/Products/Products';\nimport Dialog from './components/Dialog/Dialog';\nimport Header from './containers/Header/Header';\nimport Cart from './containers/Cart/Cart';\nimport Favorites from './containers/Favorites/Favorites';\nimport { setCurrentProduct, setFavorites, setCart, setOpenModal, getProducts } from './store/actions/actions';\n\nfunction App(props) {\n\n  const { loading, getProducts,\n        currentProduct, saveCurProd, openingModal, setOpeningModal,\n        saveFavs, favorites, cart, saveToCart } = props;\n  useEffect(() => {\n    getProducts()\n  }, [getProducts])\n\n  const onClose = () => {\n    setOpeningModal(false);\n  };\n\n  const onSubmit = (product) => {\n    const newCart = [...cart, product];\n    localStorage.setItem(\"cart\", JSON.stringify(newCart));\n    saveToCart(newCart);\n    setOpeningModal(false);\n  };\n  \n  const onSaveToFav = (newProduct) => {\n    let newFavorites = [...favorites];\n    const indexFav = newFavorites.indexOf(newProduct);\n\n    if (indexFav !== -1) {\n      newFavorites.splice(indexFav, 1);\n    } else {\n      newFavorites.push(newProduct);\n    }\n    localStorage.setItem('favorites', JSON.stringify(newFavorites));\n    saveFavs(newFavorites);\n    saveCurProd(newProduct);\n  };\n\n  const dialog = (\n    <Dialog\n      header='Аdd product to cart?'\n      onClose={onClose}\n      onSubmit={() => onSubmit(currentProduct)}\n      currentProduct={currentProduct}\n    >\n    </Dialog>\n  );\n\n\n  if (loading) {\n    return <Loading />\n  }\n  if (openingModal) {\n    return dialog\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path='/' render={() => <Products onSaveToFav={onSaveToFav} />} />\n        <Route exact path='/favorites' render={() => <Favorites onSaveToFav={onSaveToFav} />} />\n        <Route exact path='/cart' component={Cart} />\n      </Switch>\n    </div>\n  );\n\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    loading: store.loading,\n    products: store.products,\n    currentProduct: store.currentProduct,\n    openingModal: store.openingModal,\n    favorites: store.favorites,\n    cart: store.cart.cartArray\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getProducts: () => dispatch(getProducts()),\n    saveCurProd: (product) => dispatch(setCurrentProduct(product)),\n    saveFavs: (fav) => dispatch(setFavorites(fav)),\n    saveToCart: (cartItem) => dispatch(setCart(cartItem)),\n    setOpeningModal: (isOpen) => dispatch(setOpenModal(isOpen))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Actions from '../../constants/constants';\n\nconst initState = {\n    products: [],\n    filteredProducts: [],\n    color: '',\n    sort: ''\n}\n\nconst products = (state = initState, action) => {\n    switch (action.type) {\n        case Actions.FETCH_PRODUCTS:\n            return { ...state, products: action.payload, filteredProducts: action.payload };\n        case Actions.FILTER_PRODUCTS_BY_COLOR:\n            return { ...state, filteredProducts: action.payload.products, color: action.payload.color };\n        case Actions.ORDER_PRODUCTS_BY_PRICE:\n            return { ...state, filteredProducts: action.payload.products, sort: action.payload.sort };\n        default:\n            return state\n    }\n};\n\nexport default products;","import Actions from \"../../constants/constants\";\n\nconst cart = (state = {\n    cartArray: JSON.parse(localStorage.getItem('cart')) || [],\n    totalPrice: 0,\n    totalAmount: 0\n}, action) => {\n    switch (action.type) {\n        case Actions.SET_CART:\n            return { ...state, cartArray: action.payload };\n        case Actions.CLEAR_CART:\n            return { ...state, cartArray: [] };\n        case Actions.INCREASE_AMOUNT:\n            const cart = state.cartArray.map((cartItem) => {\n                if (cartItem.article === action.payload) {\n                    return { ...cartItem, amount: cartItem.amount + 1 }\n                }\n                return cartItem\n            });\n            return { ...state, cartArray: cart };\n        case Actions.DECREASE_AMOUNT:\n            const cartt = state.cartArray.map((cartItem) => {\n                if (cartItem.article === action.payload) {\n                    return { ...cartItem, amount: cartItem.amount - 1 }\n                }\n                return cartItem\n            });\n            return { ...state, cartArray: cartt };\n        case Actions.GET_TOTAL:\n            let { total, amount } = state.cartArray.reduce((cartTotal, cartItem) => {\n                const {price, amount} = cartItem;\n                const itemTotal = price * amount;\n\n                cartTotal.total +=itemTotal;\n                cartTotal.amount += amount;\n                return cartTotal\n            }, {\n                total: 0,\n                amount: 0\n            })\n            total = parseFloat(total.toFixed())\n            return {...state, totalPrice: total, totalAmount: amount}\n        default:\n            return state\n    }\n};\n\nexport default cart;","import Actions from \"../../constants/constants\";\n\nconst favorites = (state = JSON.parse(localStorage.getItem('favorites')) || [], action) => {\n    switch (action.type) {\n        case Actions.SET_FAVORITES:\n            return action.payload;\n        default:\n            return state\n    }\n};\n\nexport default favorites;","import Actions from \"../../constants/constants\";\n\nconst loading = (state = true, action) => {\n    switch (action.type) {\n        case Actions.SET_LOADING:\n            return action.payload\n        default:\n            return state\n    }\n}\n\nexport default loading;","import Actions from '../../constants/constants';\n\nconst saveCurrentProduct = (state = null, action) => {\n    switch (action.type) {\n        case Actions.SET_CURRENT_PRODUCT:\n            return action.payload;\n        default:\n            return state\n    }\n};\n\nexport default saveCurrentProduct;","import Actions from '../../constants/constants';\n\nconst openingModal = (state = false, action) => {\n    switch (action.type) {\n        case Actions.SET_OPEN_MODAL:\n            return action.payload;\n        default:\n            return state\n    }\n};\n\nexport default openingModal;","import Actions from \"../../constants/constants\";\n\nconst isToDelete = (state = false, action)  => {\n    switch (action.type) {\n        case Actions.DELETE_CART_CARD:\n            return action.payload;\n        default:\n            return state\n    }\n};\n\nexport default isToDelete;","import Actions from '../../constants/constants';\n\nconst purchase = (state = {userData: [], products: []}, action) => {\n    switch (action.type) {\n        case Actions.SET_PURCHASE_DATA:\n            return action.payload;\n        default:\n            return state\n    }\n};\n\nexport default purchase;","import { combineReducers } from 'redux';\nimport products from './products/productsReducer';\nimport cart from './cart/cartReducer';\nimport favorites from './favorites/favoritesReducer';\nimport loading from './loading/loadingReducer';\nimport currentProduct from './currentProduct/currentProductReducer';\nimport openingModal from \"./openModal/openingModalReducer\";\nimport isToDelete from './deleteCart/deleteCartReducer';\nimport purchase from './purchase/setPurchasePeducer';\nimport { reducer as formReducer } from 'redux-form';\n\nconst rootReducer = combineReducers({\n    products,\n    favorites,\n    cart,\n    loading,\n    currentProduct,\n    openingModal,\n    isToDelete,\n    purchase,\n    form: formReducer\n})\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f;\n\nconst store = createStore(\n    rootReducer, \n    compose(applyMiddleware(thunk), devTools)\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nconst productsBlock = document.getElementsByClassName(\"products\");\nconsole.log(productsBlock);\n// const qwe = window.innerHeight;\nconsole.log(document.documentElement.clientHeight);\nconsole.log(document.documentElement.scrollHeight);\n\n\n\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}